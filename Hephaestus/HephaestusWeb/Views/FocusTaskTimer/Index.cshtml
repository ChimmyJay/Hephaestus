@{
    ViewData["Title"] = "Focus Tool";
}
<head>
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
</head>
<div id="app">
    <div class="text-center">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Type task name in this"
                   v-model="FocusTask" :disabled="IsFocusing"/>
            <button type="button" class="btn btn-success"
                    v-on:click="OnStartFocus" :disabled="IsFocusing">
                Start
            </button>
            <button type="button" class="btn btn-danger"
                    v-on:click="OnStopFocus" :disabled="!IsFocusing">
                Stop
            </button>
        </div>
        <div>
            <span style="font-size: 3rem">{{DisplayElapsedTime}}</span>
        </div>
    </div>
</div>

<script>
    new Vue({
        el: '#app',
        data: {
            FocusTask: "",
            IsFocusing: false,
            ElapsedTime: 0,
            timer: null
        },
        created: function() {
            const self = this;
            fetch('FocusTaskTimer/GetFocusingTask', { method: 'GET' })
                .then(response => { return response.json(); })
                .then(data => {
                    if (data.hasFocusTask) {
                        self.FocusTask = data.taskName;
                        self.ElapsedTime = Math.floor((Date.now() - Date.parse(data.taskStartTime)) / 1000);
                        self.OnStartFocus();
                    }
                });

        },
        computed: {
            DisplayElapsedTime: function() {
                const date = new Date(0);
                date.setSeconds(this.ElapsedTime);
                return date.toISOString().substr(11, 8);
            }
        },
        methods: {
            OnStartFocus: function() {
                this.IsFocusing = true;
                this.StartCalculateElapsedTime();
            },
            OnStopFocus: function() {
                this.IsFocusing = false;
                this.StopCalculateElapsedTime();
            },
            StartCalculateElapsedTime: function() {
                const self = this;
                this.timer = setInterval(() => { self.ElapsedTime += 1; }, 1000);
            },
            StopCalculateElapsedTime: function() {
                const timer = this.timer;
                if (timer) {
                    clearInterval(timer);
                }
                this.ElapsedTime = 0;
            }
        }
    })
</script>